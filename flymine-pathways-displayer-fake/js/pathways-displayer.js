// Generated by CoffeeScript 1.3.1
(function() {

  if (!Object.prototype.watch) {
    Object.defineProperty(Object.prototype, "watch", {
      enumerable: false,
      configurable: true,
      writable: false,
      value: function(prop, handler) {
        var getter, newval, oldval, setter;
        oldval = this[prop];
        newval = oldval;
        getter = function() {
          return newval;
        };
        setter = function(val) {
          oldval = newval;
          return newval = handler.call(this, prop, oldval, val);
        };
        if (delete this[prop]) {
          return Object.defineProperty(this, prop, {
            get: getter,
            set: setter,
            enumerable: true,
            configurable: true
          });
        }
      }
    });
  }

  $(function() {
    var grid, mine, mines, row, _i, _j, _len, _len1, _results;
    mines = [
      {
        'name': "mine1",
        'pathways': ["pathway1", "pathway2", "pathway3"]
      }, {
        'name': "mine2",
        'pathways': ["pathway2", "pathway3"]
      }, {
        'name': "mine3",
        'pathways': ["pathway1", "pathway2"]
      }
    ];
    window.Grid = grid = {};
    row = $('<tr/>');
    row.append($('<th/>'));
    for (_i = 0, _len = mines.length; _i < _len; _i++) {
      mine = mines[_i];
      row.append($('<th/>', {
        'text': mine['name']
      }));
    }
    row.appendTo($('table#pathways thead'));
    _results = [];
    for (_j = 0, _len1 = mines.length; _j < _len1; _j++) {
      mine = mines[_j];
      _results.push((function(mine) {
        var pathway, _k, _len2, _ref, _results1;
        _ref = mine.pathways;
        _results1 = [];
        for (_k = 0, _len2 = _ref.length; _k < _len2; _k++) {
          pathway = _ref[_k];
          _results1.push((function(mine, pathway) {
            if (!(grid[pathway] != null)) {
              $("table#pathways tbody").append(row = $("<tr/>").append($("<td/>", {
                'text': pathway
              })));
              (function() {
                var mine, p, _l, _len3, _results2;
                p = grid[pathway] = {};
                _results2 = [];
                for (_l = 0, _len3 = mines.length; _l < _len3; _l++) {
                  mine = mines[_l];
                  p[mine['name']] = (function() {
                    var el;
                    row.append(el = $('<td/>'));
                    return el;
                  })();
                  _results2.push((function() {
                    return p.watch(mine['name'], function(a, el, newvalue) {
                      return el.html($("<span/>", {
                        'class': "label label-success",
                        'text': newvalue
                      }));
                    });
                  })());
                }
                return _results2;
              })();
            }
            return grid[pathway][mine['name']] = 'Yes';
          })(mine, pathway));
        }
        return _results1;
      })(mine));
    }
    return _results;
  });

}).call(this);
